// Code generated by ent, DO NOT EDIT.

package user

import (
	"fmt"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldRole holds the string denoting the role field in the database.
	FieldRole = "role"
	// EdgeResetPasswordTokens holds the string denoting the resetpasswordtokens edge name in mutations.
	EdgeResetPasswordTokens = "resetPasswordTokens"
	// Table holds the table name of the user in the database.
	Table = "users"
	// ResetPasswordTokensTable is the table that holds the resetPasswordTokens relation/edge.
	ResetPasswordTokensTable = "reset_password_tokens"
	// ResetPasswordTokensInverseTable is the table name for the ResetPasswordToken entity.
	// It exists in this package in order to avoid circular dependency with the "resetpasswordtoken" package.
	ResetPasswordTokensInverseTable = "reset_password_tokens"
	// ResetPasswordTokensColumn is the table column denoting the resetPasswordTokens relation/edge.
	ResetPasswordTokensColumn = "user_reset_password_tokens"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldPassword,
	FieldEmail,
	FieldRole,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Role defines the type for the "role" enum field.
type Role string

// Role values.
const (
	RoleAdmin         Role = "Admin"
	RoleTeacher       Role = "Teacher"
	RoleLegalGuardian Role = "LegalGuardian"
	RoleStudent       Role = "Student"
	RoleUnknown       Role = "Unknown"
)

func (r Role) String() string {
	return string(r)
}

// RoleValidator is a validator for the "role" field enum values. It is called by the builders before save.
func RoleValidator(r Role) error {
	switch r {
	case RoleAdmin, RoleTeacher, RoleLegalGuardian, RoleStudent, RoleUnknown:
		return nil
	default:
		return fmt.Errorf("user: invalid enum value for role field: %q", r)
	}
}
