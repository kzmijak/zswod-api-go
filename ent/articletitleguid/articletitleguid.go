// Code generated by ent, DO NOT EDIT.

package articletitleguid

const (
	// Label holds the string label denoting the articletitleguid type in the database.
	Label = "article_title_guid"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitleNormalized holds the string denoting the title_normalized field in the database.
	FieldTitleNormalized = "title_normalized"
	// EdgeArticle holds the string denoting the article edge name in mutations.
	EdgeArticle = "article"
	// Table holds the table name of the articletitleguid in the database.
	Table = "article_title_guids"
	// ArticleTable is the table that holds the article relation/edge.
	ArticleTable = "article_title_guids"
	// ArticleInverseTable is the table name for the Article entity.
	// It exists in this package in order to avoid circular dependency with the "article" package.
	ArticleInverseTable = "articles"
	// ArticleColumn is the table column denoting the article relation/edge.
	ArticleColumn = "article_title_normalized"
)

// Columns holds all SQL columns for articletitleguid fields.
var Columns = []string{
	FieldID,
	FieldTitleNormalized,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "article_title_guids"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"article_title_normalized",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
